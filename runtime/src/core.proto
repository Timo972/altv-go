syntax = "proto2";
package Core;

import "src/mvalue.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

option go_package = "/internal/pb";

service CoreAPI {
	/*rpc LogInfo(google.protobuf.StringValue) returns(google.protobuf.Empty);
	rpc LogDebug(google.protobuf.StringValue) returns(google.protobuf.Empty);
	rpc LogWarning(google.protobuf.StringValue) returns(google.protobuf.Empty);
	rpc LogError(google.protobuf.StringValue) returns(google.protobuf.Empty);
	rpc LogColored(google.protobuf.StringValue) returns(google.protobuf.Empty);*/
	rpc CreateVehicle(CreateVehicleRequest) returns (Pointer);
	// TODO:
	//rpc CreateCheckpoint(google.protobuf.Empty) returns (Pointer);
	rpc CreateVoiceChannel(CreateVoiceChannelRequest) returns(Pointer);
	rpc GetVersion(google.protobuf.Empty) returns (google.protobuf.StringValue);
	rpc GetBranch(google.protobuf.Empty) returns (google.protobuf.StringValue);
	rpc IsDebug(google.protobuf.Empty) returns (google.protobuf.BoolValue);
	rpc Hash(google.protobuf.StringValue) returns (google.protobuf.UInt64Value);
	rpc FileExists(google.protobuf.StringValue) returns (google.protobuf.BoolValue);
	rpc FileRead(google.protobuf.StringValue) returns (google.protobuf.StringValue);
	/*rpc GetEntityByID(google.protobuf.UInt32Value) returns (MValue.BaseObject);
	rpc GetEntities(google.protobuf.Empty) returns(BaseObjectList);
	rpc GetPlayers(google.protobuf.Empty) returns(BaseObjectList);
	rpc GetVehicles(google.protobuf.Empty) returns(BaseObjectList);
	rpc HasMetaData(google.protobuf.StringValue) returns (google.protobuf.BoolValue);
	rpc GetMetaData(google.protobuf.StringValue) returns (MValue.MValue);
	rpc SetMetaData(SetMetaRequest) returns(google.protobuf.Empty);
	rpc DeleteMetaData(google.protobuf.StringValue) returns(google.protobuf.Empty);
	rpc HasSyncedMetaData(google.protobuf.StringValue) returns (google.protobuf.BoolValue);
	rpc GetSyncedMetaData(google.protobuf.StringValue) returns (MValue.MValue);
	rpc SetSyncedMetaData(SetMetaRequest) returns(google.protobuf.Empty);
	rpc DeleteMetaSyncedData(google.protobuf.StringValue) returns(google.protobuf.Empty);
	rpc DestroyBaseObject(Pointer) returns(google.protobuf.Empty);
	rpc GetRootDirectory(google.protobuf.Empty) returns (google.protobuf.StringValue);
	rpc StartResource(google.protobuf.StringValue) returns (google.protobuf.BoolValue);
	rpc StopResource(google.protobuf.StringValue) returns(google.protobuf.Empty);
	rpc RestartResource(google.protobuf.StringValue) returns (google.protobuf.BoolValue);
	rpc GetRequiredPermissions(google.protobuf.Empty) returns(PermissionList);
	rpc GetOptionalPermissions(google.protobuf.Empty) returns(PermissionList);
	rpc GetPlayersByName(google.protobuf.Empty) returns(google.protobuf.Empty);
	rpc GetNetTime(google.protobuf.Empty) returns (google.protobuf.UInt32Value);
	rpc GetSDKHash(google.protobuf.Empty) returns (google.protobuf.StringValue);
	// TODO:
	rpc CreateColShape(google.protobuf.Empty) returns(google.protobuf.Empty);
	rpc GetVehicleModelByHash(google.protobuf.UInt32Value) returns (VehicleModelInfo);
	rpc GetResourceByName(google.protobuf.StringValue) returns (Pointer);
	rpc HashServerPassword(google.protobuf.StringValue) returns (google.protobuf.UInt64Value);
	rpc StopServer(google.protobuf.Empty) returns(google.protobuf.Empty);*/
}

message CreateVehicleRequest {
	required uint32 model = 1;
	required MValue.Vector3 pos = 2;
	required MValue.Vector3 rot = 3;
}

message CreateVoiceChannelRequest {
	required bool spatial = 1;
	required float maxDistance = 2;
}

message SetMetaRequest {
	required string key = 1;
	required MValue.MValue value = 2;
}

message VehicleModelInfo {
	
	required string title = 1;
	enum ModelType {
		INVALID = 0;
			PED = 1;
			AUTOMOBILE = 2;
			PLANE = 3;
			TRAILER = 4;
			QUAD_BIKE = 5;
			SUBMARINE_CAR = 6;
			AMPHIBIOUS_AUTOMOBILE = 7;
			AMPHIBIOUS_QUAD_BIKE = 8;
			HELI = 9;
			BLIMP = 10;
			AUTOGYRO = 11;
			BIKE = 12;
			BMX = 13;
			BOAT = 14;
			TRAIN = 15;
			SUBMARINE = 16;
			OBJECT = 17;
	}
	required ModelType modelType = 2;
	required uint32 wheelsCount = 14;
	required bool hasArmoredWindows = 3;
	required bool hasAutoAttachTrailer = 4;
	required uint32 primaryColor = 5;
	required uint32 secondaryColor = 6;
	required uint32 pearlColor = 7;
	required uint32 wheelsColor = 8;
	required uint32 interiorColor = 9;
	required uint32 dashboardColor = 10;
	repeated uint32 modKits = 11;
	required uint32 extras = 12;
	required uint32 defaultExtras = 13;
}

message Pointer {
	required string ptr = 1;
}

message BaseObjectList {
	repeated MValue.BaseObject entities = 1;
}

message PermissionList {
	repeated string perms = 1;
}